<?xml version="1.0" encoding="utf-8"?>
<text:SimpleText xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:text="text.*" transformX="{width/2}" transformY="{height/2}">
    <fx:Script>
        <![CDATA[
            import com.greensock.TweenLite;
            import com.greensock.TweenMax;
            import com.greensock.easing.*;
            import com.greensock.text.FlexSplitTextField;
            import com.greensock.text.SplitTextField;

            import flash.utils.setTimeout;

            private var dict:Dictionary = new Dictionary();

            override protected function init():void {
                super.init();

                if (subTitle) {
                    animate(subTitleText);
                }

                animate(titleText, false);
                //addShadows(subTitleText, titleText);
            }

            protected function animate(txtBox:Text, fade:Boolean = true):void {
                var stf:FlexSplitTextField = new FlexSplitTextField(txtBox, SplitTextField.TYPE_CHARACTERS);
                timeline.to(txtBox.parent, 0.1, { alpha: 1 });

                timeline.staggerFrom(stf.textFields, stepDuration * 2, { alpha: 0,
                                         onStartParams: [ "{self}" ],
                                         onStart: function(tl:TweenLite):void {
                                             var txt:TextField = TextField(tl.target);
                                             dict[txt] = txt.text.charCodeAt(0) + 9;
                                         },
                                         onUpdateParams: [ "{self}" ],
                                         onUpdate: function(tl:TweenLite):void {
                                             var txt:TextField = TextField(tl.target);
                                             var value:int = Math.floor(tl.ratio * 9);
                                             var newValue:String = String.fromCharCode(dict[txt] - value);

                                             if (txt.text != newValue) {
                                                 txt.text = newValue;
                                                 txt.setTextFormat(new TextFormat(txtBox.getStyle('fontFamily'), txtBox.getStyle('fontSize')));
                                             }
                                         },
                                         ease: Back.easeOut,
                                         delay: stepDuration }, 0.05);

                if (fade) {
                    timeline.to(txtBox.parent, stepDuration, { alpha: 0, delay: stepDuration });
                }
            }
        ]]>
    </fx:Script>

    <mx:Canvas id="innerContent" width="100%" height="100%" horizontalScrollPolicy="off" verticalScrollPolicy="off">
        <mx:HBox horizontalAlign="center" verticalAlign="middle" width="100%" height="100%" id="text1" alpha="0">
            <mx:Text text="{subTitle}" fontSize="{subTitleSize}" id="subTitleText" width="95%" textAlign="center" selectable="false"/>
        </mx:HBox>

        <mx:HBox horizontalAlign="center" verticalAlign="middle" width="100%" height="100%" id="text2" alpha="0">
            <mx:Text text="{title}" fontSize="{titleSize}" id="titleText" width="95%" textAlign="center" selectable="false"/>
        </mx:HBox>
    </mx:Canvas>
</text:SimpleText>
