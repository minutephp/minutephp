<?xml version="1.0" encoding="utf-8"?>
<mx:Application xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:mx="library://ns.adobe.com/flex/mx" layout="vertical" minWidth="955" minHeight="600" applicationComplete="init()">

    <fx:Script>
        <![CDATA[
            import org.osmf.elements.VideoElement;

            var video:Video;

            var nc:NetConnection;

            var ns:NetStream;

            var newMeta:Object;

            function init():void {
                video = new Video();
                this.rawChildren.addChild(video);

                nc = new NetConnection(); //  variable for a new NetConnection
                nc.connect(null); //  set the nc variable to null

                ns = new NetStream(nc); // create a variable for a new NetStream connection & connect it to the nc variable
                ns.addEventListener(NetStatusEvent.NET_STATUS, myStatusHandler); //  add a listener to the NetStream to listen for any changes that happen with the NetStream
                ns.addEventListener(AsyncErrorEvent.ASYNC_ERROR, asyncErrorHandler); //  add a listener to the NetStream for any errors that may happen

                video.attachNetStream(ns); // attach the NetStream variable to the video object

                newMeta = new Object(); // create a new object to handle the metaData
                newMeta.onMetaData = onMetaData; //  when we recieve MetaData, attach it to the newMeta object
                ns.client = newMeta; // attach the NetStream.client to the newMeta variable
                ns.bufferTime = 5;

                ns.play("rtmp://dev.wowza.longtailvideo.com/vod/_definst_/sintel/640.mp4");
            }

            function asyncErrorHandler(event:AsyncErrorEvent):void {
                trace(event.toString()); // this will handle any errors with video playback
            }

            function myStatusHandler(event:NetStatusEvent):void {
                trace(event.toString()); // this will handle any errors with video playback
            }

            function onMetaData(newMeta:Object):void {
                trace("Metadata: duration=" + newMeta.duration + " width=" + newMeta.width + " height=" + newMeta.height + " framerate=" + newMeta.framerate);  // traces what it says                
            }


            protected function skip(event:MouseEvent):void {
                ns.seek(500);   
            }
        ]]>
    </fx:Script>


    <mx:Button click="skip(event)" label="test"/>

    <!--<mx:Label text="{player.playheadTime}" />

    <mx:Label text="{(player.bytesLoaded / player.bytesTotal) * 100}" />-->
</mx:Application>
