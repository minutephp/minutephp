<?xml version="1.0" encoding="utf-8"?>
<mx:Application xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:mx="library://ns.adobe.com/flex/mx" layout="vertical" minWidth="955" minHeight="600" applicationComplete="init()">

    <fx:Script>
        <![CDATA[
            import mx.utils.ObjectUtil;
            
            import org.osmf.elements.VideoElement;

            var video:Video;

            var nc:NetConnection;

            var ns:NetStream;

            var newMeta:Object;

            function init():void {
                video = new Video(854, 480);
                video.smoothing = true;
                this.rawChildren.addChild(video);

                nc = new NetConnection(); //  variable for a new NetConnection
                nc.connect(null); //  set the nc variable to null

                ns = new NetStream(nc); // create a variable for a new NetStream connection & connect it to the nc variable
                ns.addEventListener(NetStatusEvent.NET_STATUS, myStatusHandler); //  add a listener to the NetStream to listen for any changes that happen with the NetStream
                ns.addEventListener(AsyncErrorEvent.ASYNC_ERROR, asyncErrorHandler); //  add a listener to the NetStream for any errors that may happen
				ns.addEventListener(ProgressEvent.PROGRESS, function(event: ProgressEvent): void {
					trace("event:", event.toString());
				})

                video.attachNetStream(ns); // attach the NetStream variable to the video object

                newMeta = new Object(); // create a new object to handle the metaData
                newMeta.onMetaData = onMetaData; //  when we recieve MetaData, attach it to the newMeta object
                ns.client = newMeta; // attach the NetStream.client to the newMeta variable
                ns.bufferTime = 600;

                ns.play("http://www.stockutils.com/get-youtube-url?id=Q3xktII_PVY");
                //nc.client = { onBWDone: function():void{} };
                //nc.connect("https://r14---sn-cvh7kn7k.googlevideo.com/videoplayback?sparams=dur%2Cei%2Cid%2Cinitcwndbps%2Cip%2Cipbits%2Citag%2Clmt%2Cmime%2Cmm%2Cmn%2Cms%2Cmv%2Cnh%2Cpl%2Cratebypass%2Crequiressl%2Csource%2Cupn%2Cexpire&expire=1480797229&itag=22&mime=video%2Fmp4&source=youtube&pl=22&requiressl=yes&ratebypass=yes&initcwndbps=276250&nh=IgpwcjAyLmJvbTA3KgwxMjEuMjQwLjEuNDE&upn=BNyOLlzFfDU&ei=zddCWM_cC8TFoAOiuq_wCg&id=o-ADSoU5otidO7_kvKkqGbsAw0kaspFFWLhJLl-DZUHFP4&ipbits=0&key=yt6&ip=123.252.241.119&ms=au&mv=m&mt=1480775285&lmt=1480155441998637&dur=8591.568&mn=sn-cvh7kn7k&mm=31&signature=900EC35A51E3AE8F10B36CD5BD648F064228A3F2.5AE390292880484B2E7FBC554A5DE89D19AFC6E6");
                //rtmp://dev.wowza.longtailvideo.com/vod/_definst_/sintel/640.mp4
                //rtmp://s223ky9aug173x.cloudfront.net/cfx/st/countdown.flv
            }

            function asyncErrorHandler(event:AsyncErrorEvent):void {
                trace(1111, event.toString()); // this will handle any errors with video playback
            }

            function myStatusHandler(event:NetStatusEvent):void {
                trace(2222, ObjectUtil.toString(event.info)); // this will handle any errors with video playback
            }

            function onMetaData(newMeta:Object):void {
                trace("Metadata: duration=" + newMeta.duration + " width=" + newMeta.width + " height=" + newMeta.height + " framerate=" + newMeta.framerate);  // traces what it says                
            }


            protected function skip(event:MouseEvent):void {
                ns.seek(595);   
            }
        ]]>
    </fx:Script>


    <mx:Button click="skip(event)" label="test"/>

    <!--<mx:Label text="{player.playheadTime}" />

    <mx:Label text="{(player.bytesLoaded / player.bytesTotal) * 100}" />-->
</mx:Application>
